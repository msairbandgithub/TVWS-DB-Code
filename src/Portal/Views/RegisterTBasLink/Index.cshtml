<!-- Copyright (c) Microsoft Corporation. All rights reserved.
     Licensed under the MIT License. -->


@using System;
@using System.Text;
@model Microsoft.WhiteSpaces.Common.TBasLinkRegistration

@section Left{
<section>
    @Html.Partial("RegisterNavigation")
</section>
}

@section Right{
    @Html.Partial("MapPartial")
    @using (Ajax.BeginForm("Register", "RegisterMVPD", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "registerDiv" }))
    {
<div id="registerDiv" class="summary-pane accordion left">
    <div class="container">
        <h2>Register Temporary BAS Links</h2>
        <p>Temporary BAS Link include full power TV, Class A TV, low power TV, TV translator, FM radio and AM radio broadcast stations. Only holders of FCC TV broadcast auxiliary service licenses, or of TV broadcast licenses, are eligible to register for Temporary BAS Link protection.</p>
        <section>
            <div class="row">
                @Html.Label("Friendly Name")
                <span class="error hide" id="errFriendlyName"></span>
                <div class="input mandatory">
                                        @Html.TextBoxFor(model => model.FriendlyName, new { @id = "FriendlyName" })
                    <span class="balloon">Name to identify the registration</span>
                </div>
            </div>
            @*<div class="row">
                @Html.Label("Description")
                @Html.TextBoxFor(model => model.Description, new { @Id = "Description" })
                <span class="balloon">Precise description about registration</span>
            </div>*@
            <h5>Transmitter</h5>

            <div class="row">
                <span class="error hide" id="errtAddress"></span>
                @Html.Label("Address")
                @Html.TextArea("dcbfdf", new { @id = "tAddress" })
                <span class="balloon">Location of the transmitting antenna. Enter address and click on GetLocation link to get coordinates</span>
                <a id="lnkGetTLocation">Get Location</a>
            </div>

            <div class="row split">
                <span class="error hide " id="errtLat"></span>
                @Html.Label("Coordinates")
                <div class="input mandatory">
                                        @Html.TextBoxFor(x => x.TransmitterLatitude, new { @id = "tLat", @placeholder = "latitude" })
                    <span class="balloon">Location of the transmitting antenna (latitude and longitude in NAD 83, accurate to ±/− 50 m);</span>
                </div>
                <div class="input mandatory">
                    @Html.TextBoxFor(X => X.TransmitterLongitude, new { @id = "tLong", @placeholder = "longitude" })
                    <span class="balloon">Location of the transmitting antenna (latitude and longitude in NAD 83, accurate to ±/− 50 m);</span>
                </div>
            </div>
            <h5>Receiver</h5>
            <div class="row">
                <span class="error hide" id="errrAddress"></span>
                @Html.Label("Address")
                @Html.TextArea("dcbfdf", new { @id = "rAddress" })
                <span class="balloon">Location of the reciever antenna. Enter address and click on GetLocation link to get coordinates</span>
                <a id="lnkGetRLocation">Get Location</a>
            </div>

            <div class="row split">
                @Html.Label("Coordinates")
                <span class="error hide " id="errrLat"></span>
                <div class="input mandatory">
                                        @Html.TextBoxFor(x => x.RecieverLatitude, new { @id = "rLat", @placeholder = "latitude" })
                    <span class="balloon">Location of the reciever antenna. Enter address and click on GetLocation link to get coordinates</span>
                </div>
                <div class="input mandatory">
                    @Html.TextBoxFor(x => x.RecieverLongitude, new { @id = "rLong", @placeholder = "longitude" })
                    <span class="balloon">Location of the reciever antenna. Enter address and click on GetLocation link to get coordinates</span>
                </div>
            </div>
            <h5>CallSign</h5>
            <div class="row" id="divChannels">
                @Html.Label("Channels")
                <span class="error hide" id="errChannels">Please select atleast one Channel</span>
                <div class="channel-list channel-num">
                    <ul id="channelList">
                        @for (int i = 2; i < 52; i++)
                        {
                        <li>
                            @{var id = "chk" + i;
                            var value = string.Empty;
                            if (i < 10)
                            {
                            value = "0" + i;
                            }
                            else
                            {
                            value = i.ToString();
                            }
                            }
                            @if (i == 3 || i == 4 || i == 37)
                            {
                            <input type="checkbox" id="@id" class="hide" value="@i" disabled="disabled" />
                            }
                            else
                            {
                            <input type="checkbox" id="@id" class="hide" value="@i" />
                            }
                            <label for="@id">@value</label>
                        </li>
                        }
                    </ul>
                    <span class="balloon">Channels used by the temp BAS link operated at the site</span>
                </div>
            </div>

            <div class="row">
                @Html.Label("Callsign")
                <span class="error hide" id="errCallSign"></span>
                <div class="input mandatory">
                                        @Html.TextBoxFor(model => model.CallSign, new { @id = "CallSign" })
                    <span class="balloon">Call sign of temp BAS link issued by FCC</span>
                </div>
            </div>
            <h5>Event</h5>
            <div class="row split">
                @Html.Label("Start Time")
                <span class="error hide " id="errDate"></span>
                <span class="error hide " id="errStartDate"></span>
                <div class="input mandatory">
                    @Html.TextBoxFor(x => x.StartDate, new { @id = "StartDate" })
                    <span class="balloon">Start time of the event. Note duration of registration should not exceed 720 hours(FCC Rule)</span>
                </div>

                <div class="input mandatory">
                                        @Html.TextBoxFor(x => x.StartTime, new { @id = "StartTime" })
                    <span class="balloon">Start time of the event. Note duration of registration should not exceed 720 hours(FCC Rule)</span>
                </div>
            </div>

            <div class="row split">
                @Html.Label("End Time")
                <span class="error hide " id="errEndDate"></span>
                <div class="input mandatory">
                                        @Html.TextBoxFor(x => x.EndDate, new { @id = "EndDate" })
                    <span class="balloon">End time of the event. Note duration of registration should not exceed 720 hours(FCC Rule)</span>
                </div>

                <div class="input mandatory">
                    @Html.TextBoxFor(X => X.EndTime, new { @id = "EndTime" })
                    <span class="balloon">End time of the event. Note duration of registration should not exceed 720 hours(FCC Rule)</span>
                </div>
            </div>
            <h5>Contact Card </h5>
            <div class="row">
                @Html.LabelFor(x => x.Name)
                <span id="Name">@Model.Name</span>
            </div>

            <div class="row hide">
                <span id="Address1">@Model.Address1</span>
                <span id="Address2">@Model.Address2</span>
                <span id="City">@Model.City</span>
                <span id="State">@Model.State</span>
                <span id="Country">@Model.Country</span>
            </div>

            <div class="row">
                @{
                StringBuilder address = new StringBuilder();
                if (!string.IsNullOrEmpty(Model.Address1))
                {
                address.Append(Model.Address1);
                }
                if (!string.IsNullOrEmpty(Model.Address2))
                {
                address.Append(", ");
                address.Append(Model.Address2);
                }
                address.Append("<br />");

                if (!string.IsNullOrEmpty(Model.City))
                {
                address.Append(Model.City);
                }
                if (!string.IsNullOrEmpty(Model.State))
                {
                address.Append(", ");
                address.Append(Model.State);
                }
                address.Append("<br />");
                if (!string.IsNullOrEmpty(Model.Country))
                {
                address.Append(Model.Country);
                }

                @Html.Label("Address")
                <span>@Html.Raw(@address.ToString())</span>
                }
            </div>

            <div class="row">
                @Html.LabelFor(x => x.Email)
                <span id="Email">@Model.Email</span>
            </div>

            <div class="row">
                @Html.LabelFor(x => x.Phone)
                <span id="Email">@Model.Phone</span>
            </div>

            <div class="row">
                @ViewBag.Result
            </div>
            <div class="row">
                <div class="contactcard-label">
                    <input type="checkbox" id="accept" class="contact-card-check" /><label for="accept">Agree to <a href="#" title="Privacy Plicy" role="link">Privacy</a> & <a href="#" role="link" title="Terms and Conditions">Terms and Conditions</a></label>
                </div>
                <div class="info ">By clicking submit, I understand that all information required by the FCC to be in a TV white space database will be shared with other TVWS database administrators authorized by the FCC and will be available to the public. If the information I have provided is inaccurate or incomplete, I understand that the FCC has the right to reject my registration request or remove my information from the database.</div>
                <button type="button" class="submit contactcard-submit" id="submit" disabled="disabled">Submit</button>
                <span id="error" style="color:red"></span>
                <span id="success" style="color:green"></span>
            </div>
            <div id="error" class="alert error"></div>
            <div id="success" class="alert succeed"></div>
        </section>
    </div>
</div>

        @*//Need to classes for these*@

    }
}
@section Preloader{
<div id="preloader" class="preloader"></div>
}
dfsdf
sdfsdf
sdfsdfsd
sdfsdf
@section scripts{
<script type="text/javascript" src="/Scripts/RegisterTbas.js"></script>
<script type="text/javascript" src="/Scripts/Register.js"></script>
<script type="text/javascript" src="/Scripts/Common.js"></script>
}
